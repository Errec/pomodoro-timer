var setBreak=function(){function e(){c.textContent=s.toString()}function t(){60===s||s++,e()}function n(){1===s||s--,e()}function i(){return s}var s=10,c=document.getElementById("break-input"),a=document.getElementById("break-increase"),d=document.getElementById("break-decrease");return a.addEventListener("click",t),d.addEventListener("click",n),e(),{getValue:i}}(),setSession=function(){function e(){c.textContent=s.toString()}function t(){360===s||s++,e()}function n(){1===s||s--,e()}function i(){return s}var s=20,c=document.getElementById("session-input"),a=document.getElementById("session-increase"),d=document.getElementById("session-decrease");return a.addEventListener("click",t),d.addEventListener("click",n),e(),{getValue:i}}(),timer=function(){function e(e,t){var n=document.getElementById("rect"+e),i=new RegExp("(^| )rect-animate-color($| )","g");"session"===t?n.className+=" rect-animate-color":n.className=n.className.replace(i," ")}function t(){i(!1),u=!1,c=!1,clearTimeout(myCountdown),clearTimeout(l),displayValue=setSession.getValue(),e()}function n(){var t=setSession.getValue()+1,r=setBreak.getValue()+1,m=t/s,g=r/s,E=0,f=0;c=!0,u||i(!0),a=setInterval(function(){E<=s&&(e(E,"session"),E++)},1e3*m),d=setTimeout(function(){o=setInterval(function(){f<=s&&(e(f,"break"),f++)},1e3*g)},1e3*t),l=setTimeout(function(){clearTimeout(a),clearTimeout(d),clearTimeout(o),c&&n()},1e3*(t+r+1))}function i(e){!1===e?(r.disabled=!1,g.disabled=!1,E.disabled=!1,f.disabled=!1,b.disabled=!1):(r.disabled=!0,g.disabled=!0,E.disabled=!0,f.disabled=!0,b.disabled=!0)}var s=367,c=!0,a=null,d=null,o=null,l=null,u=!1,r=document.getElementById("start-btn"),m=document.getElementById("reset-btn"),g=document.getElementById("session-increase"),E=document.getElementById("session-decrease"),f=document.getElementById("break-increase"),b=document.getElementById("break-decrease");r.addEventListener("click",n),m.addEventListener("click",t)}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
