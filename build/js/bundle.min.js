function addZero(e){return e>9?""+e:"0"+e}!function(e){function t(){do{r==i?r=0:r++}while(o.hasOwnProperty(r));return r}if(!/MSIE 10/i.test(navigator.userAgent))try{var n=new Blob(["var fakeIdToId = {};onmessage = function (event) {  var data = event.data,    name = data.name,    fakeId = data.fakeId,    time;  if(data.hasOwnProperty('time')) {    time = data.time;  }  switch (name) {    case 'setInterval':      fakeIdToId[fakeId] = setInterval(function () {        postMessage({fakeId: fakeId});      }, time);      break;    case 'clearInterval':      if (fakeIdToId.hasOwnProperty (fakeId)) {        clearInterval(fakeIdToId[fakeId]);        delete fakeIdToId[fakeId];      }      break;    case 'setTimeout':      fakeIdToId[fakeId] = setTimeout(function () {        postMessage({fakeId: fakeId});        if (fakeIdToId.hasOwnProperty (fakeId)) {          delete fakeIdToId[fakeId];        }      }, time);      break;    case 'clearTimeout':      if (fakeIdToId.hasOwnProperty (fakeId)) {        clearTimeout(fakeIdToId[fakeId]);        delete fakeIdToId[fakeId];      }      break;  }}"]);e=window.URL.createObjectURL(n)}catch(e){}var a,o={},r=0,i=2147483647,s="HackTimer.js by turuslan: ";if("undefined"!=typeof Worker)try{a=new Worker(e),window.setInterval=function(e,n){var r=t();return o[r]={callback:e,parameters:Array.prototype.slice.call(arguments,2)},a.postMessage({name:"setInterval",fakeId:r,time:n}),r},window.clearInterval=function(e){o.hasOwnProperty(e)&&(delete o[e],a.postMessage({name:"clearInterval",fakeId:e}))},window.setTimeout=function(e,n){var r=t();return o[r]={callback:e,parameters:Array.prototype.slice.call(arguments,2),isTimeout:!0},a.postMessage({name:"setTimeout",fakeId:r,time:n}),r},window.clearTimeout=function(e){o.hasOwnProperty(e)&&(delete o[e],a.postMessage({name:"clearTimeout",fakeId:e}))},a.onmessage=function(e){var t,n,a,r=e.data,i=r.fakeId;if(o.hasOwnProperty(i)&&(t=o[i],a=t.callback,n=t.parameters,t.hasOwnProperty("isTimeout")&&t.isTimeout&&delete o[i]),"string"==typeof a)try{a=new Function(a)}catch(e){console.log(s+"Error parsing callback code string: ",e)}"function"==typeof a&&a.apply(window,n)},a.onerror=function(e){console.log(e)},console.log(s+"Initialisation succeeded")}catch(e){console.log(s+"Initialisation failed"),console.error(e)}else console.log(s+"Initialisation failed - HTML5 Web Worker is not supported")}("HackTimerWorker.js");var setBreak=function(){function e(){r.textContent=5===o?"05 min":o.toString()+" min"}function t(){60===o||(o+=5),e()}function n(){5===o||(o-=5),e()}function a(){return o}var o=5,r=document.getElementById("break-input"),i=document.getElementById("break-increase"),s=document.getElementById("break-decrease");return i.addEventListener("click",t),s.addEventListener("click",n),{getValue:a}}(),setSession=function(){function e(){r.textContent=5===o?"05 min":o.toString()+" min"}function t(){360===o||(o+=5),e()}function n(){5===o||(o-=5),e()}function a(){return o}var o=5,r=document.getElementById("session-input"),i=document.getElementById("session-increase"),s=document.getElementById("session-decrease");return i.addEventListener("click",t),s.addEventListener("click",n),{getValue:a}}(),timeMarkers=function(){function e(){t.textContent=addZero(Math.floor(setSession.getValue()/5*1)).toString()+" min",n.textContent=addZero(Math.floor(setSession.getValue()/5*2)).toString()+" min",a.textContent=addZero(Math.floor(setSession.getValue()/5*3)).toString()+" min",o.textContent=addZero(Math.floor(setSession.getValue()/5*4)).toString()+" min",r.textContent=addZero(Math.floor(setSession.getValue()/5*5)).toString()+" min"}var t=document.getElementById("time-mark-0"),n=document.getElementById("time-mark-1"),a=document.getElementById("time-mark-2"),o=document.getElementById("time-mark-3"),r=document.getElementById("time-mark-4"),i=document.getElementById("session-increase"),s=document.getElementById("session-decrease");i.addEventListener("click",e),s.addEventListener("click",e)}(),timer=function(){function e(e,t){var n=document.getElementById("rect"+e),a=new RegExp("(^| )rect-animate-color($| )","g");"session"===t?n.className+=" rect-animate-color":n.className=n.className.replace(a," ")}function t(){u?(u=!1,k.style.backgroundImage="url(../img/reload-icon.svg)",a()):(u=!0,k.style.backgroundImage="url(../img/play-icon.svg)",n())}function n(){o(!1),m=!1,i=!1,clearTimeout(s),clearTimeout(d),clearTimeout(c),clearTimeout(l),clearTimeout(commitUpdate),v.textContent="0 contributions in the current session",displayValue=setSession.getValue();for(var t=0;t<=r;t++)e(t,"reset")}function a(){var t=setSession.getValue(),n=setBreak.getValue(),u=t/r,I=n/r,k=u/4,g=0,y=0,p=0;i=!0,m||o(!0),commitUpdate=setInterval(function(){v.textContent=g.toString()+" contributions in the current session",g++},k*f),s=setInterval(function(){y<=r&&(e(y,"session"),y++)},u*f),d=setTimeout(function(){clearTimeout(commitUpdate),v.textContent="WARNING: the database server has gone away! Take a break...",c=setInterval(function(){p<=r&&(e(p,"break"),p++)},I*f)},t*f),l=setTimeout(function(){clearTimeout(s),clearTimeout(d),clearTimeout(c),clearTimeout(commitUpdate),i&&a()},(t+n)*f)}function o(e){!1===e?(g.disabled=!1,g.style.backgroundColor="#f7f9fa",y.disabled=!1,y.style.backgroundColor="#f7f9fa",p.disabled=!1,p.style.backgroundColor="#f7f9fa",b.disabled=!1,b.style.backgroundColor="#f7f9fa"):(g.disabled=!0,g.style.backgroundColor="#BCBCBC",y.disabled=!0,y.style.backgroundColor="#BCBCBC",p.disabled=!0,p.style.backgroundColor="#BCBCBC",b.disabled=!0,b.style.backgroundColor="#BCBCBC")}var r=364,i=!0,s=null,d=null,c=null,l=null,m=!1,u=!0,f=6e4,I=document.getElementById("timer-wrapper"),k=document.getElementById("start-btn"),g=document.getElementById("session-increase"),y=document.getElementById("session-decrease"),p=document.getElementById("break-increase"),b=document.getElementById("break-decrease"),v=document.getElementById("commit-count");document.getElementById("headline");k.addEventListener("click",t),function(){for(var e=new Date,t=e.getDay(),n=0;n<t;n++){var a=document.createElement("div");a.setAttribute("id","rect"+(r+1+n)),a.className+=" rect",I.appendChild(a)}r+=t}()}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
